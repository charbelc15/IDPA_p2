
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import BOTH, END, YES, Frame, Image, Label, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
from tkinter import filedialog
import tkinter
from tkinter.filedialog import FileDialog, askopenfile, askopenfilename
from tkinter.tix import IMAGETEXT
from click import password_option

from numpy import choose
from Project2_parts.gui_functions.Start_btn import Start_btn



















#Projet 2 inputs
from Project2_parts.gui_functions.get_Full_Indexing_Cosine import get_Full_Indexing_Cosine
from Project2_parts.gui_functions.get_Full_Indexing_PCC import get_Full_Indexing_PCC
from Project2_parts.gui_functions.get_Full_NoIndexing_Cosine import get_Full_NoIndexing_Cosine
from Project2_parts.gui_functions.get_Full_NoIndexing_PCC import get_Full_NoIndexing_PCC
from Project2_parts.gui_functions.get_IDF_Indexing_Cosine import get_IDF_Indexing_Cosine
from Project2_parts.gui_functions.get_IDF_Indexing_PCC import get_IDF_Indexing_PCC
from Project2_parts.gui_functions.get_IDF_NoIndexing_Cosine import get_IDF_NoIndexing_Cosine
from Project2_parts.gui_functions.get_IDF_NoIndexing_PCC import get_IDF_NoIndexing_PCC
from Project2_parts.gui_functions.get_TED import getTED
import os
from Project2_parts.gui_functions.get_TF_Indexing_Cosine import get_TF_Indexing_Cosine
from Project2_parts.gui_functions.get_TF_Indexing_PCC import get_TF_Indexing_PCC
from Project2_parts.gui_functions.get_TF_NoIndexing_Cosine import get_TF_NoIndexing_Cosine

from Project2_parts.gui_functions.get_TF_NoIndexing_PCC import get_TF_NoIndexing_PCC
from Project2_parts.Part1_CompareVectors.vector.Filter_Text import Filter_Text
from Project2_parts.gui_functions.my_upd import my_upd























OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()



#TED
#ADD r before string for it to work!!

#Lea here we want the FilePath from browse button
# frame = Frame(width=700, height=100, bg="white", colormap="new")
# frame.grid(fill =BOTH,expand=True)
# locA = Entry(frame, width=40, borderwidth=5)
# locA.grid(row=1, column=0, padx=50)
# fileA = ""
# from tkinter import *
# from tkinter import ttk
# from tkinter import filedialog
# filesSelector = ttk.Frame(window)
# filesSelector.pack()
# filesSelector.config(height = 600, width = 400)
# fileEntry1=ttk.Entry(filesSelector).grid(row=0,column=1)

# locA=tk.Entry(window,font=40)
# locA.grid(row=2,column=2)

# def browsefunc():
#     filename =FileDialog.askopenfilename(filetypes=(("tiff files","*.tiff"),("All files","*.*")))
#     locA.insert(tk.END, filename) # add this

# b1=tk.Button(root,text="DEM",font=40,command=browsefunc)
# b1.grid(row=2,column=4)
import tkinter as tk
from tkinter import messagebox
from tkinter import filedialog
global password
password=''
global myStrVar
global query
query = 'default'
myStrVar = tk.StringVar(window,password)












#QUERY 
strings=[
    'xml_files/Project2_test1.xml' # 1
    ,'xml_files/Project2_test2.xml' # 2
   ,'xml_files/Project2_test3.xml' # 3
   ,'xml_files/Project2_test4.xml' # 4
   ,'xml_files/Project2_test5.xml' # 5
   ,'xml_files/Project2_test6.xml' # 6
   ,'xml_files/Project2_test7.xml' # 7
   ,'xml_files/Project2_test8.xml' # 8
   ,'xml_files/Project2_test9.xml' # 9
   ,'xml_files/Project2_test10.xml'  # 10
]


#Lea here we want the Query from Write your Query text box
#Query = 'tannir ece chocolat?   I @'
























def choose_file() :
        files = [('xml_files', '*.xml'),('All files','*')]

        filename = filedialog.askopenfilename(initialdir = "/",
                                          title = "Select a File",
                                          filetypes = files,
                                          defaultextension = files)
       

#User select cancel
        if (len(filename) == 0):
         messagebox.showinfo("show info", "you must select a file")       
         return
#selection go to Entry widget
        else:
         myStrVar.set(filename)
        path = myStrVar.get()
        return path

# FilePath = r"C:\Users\Charbel\Desktop\LAU\LAU Fourth Year\Spring2022\IDPA\Project2\CodeProject2\ET\xml_files\Project2_N_test1.xml"
import tkinter as tk
global myVar

myVar = tk.StringVar(window,query)

window.geometry("1196x794")
window.configure(bg = "#FFFFFF")

Label = tk.Label(window, text="Select CSV files to compare").grid(row = 1, column = 0, columnspan = 30)
browseButton1 = tk.Button(window,text="Browse", command=choose_file).grid(row = 2, column = 30)
txt1 = tk.Text(window, width = 100, height = 1).grid(row = 2, column = 0, columnspan = 30)
canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 794,
    width = 1196,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    1196.0,
    794.0,
    fill="#33ccff",
    outline="")

canvas.create_rectangle(
    193.0,
    79.0,
    1004.0,
    714.0,
    fill="#0082C8",
    outline="")




entry_1 = Entry(
    window,    bg="white", textvariable = myVar
)
entry_1.grid(row=1,column=2)
entry_1.place(
    x=657.0,
    y=212.0,
    width=238.0,
    height=29.0
)


button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = tk.Button(
image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
   command=lambda: my_upd(query,myVar),
    relief="flat")

button_1.grid(row=1,column=3) 

button_1.place(
    x=657.0,
    y=141.0,
    width=245.0,
    height=39.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    801.0,
    638.5,
    image=entry_image_2
)
 

my_str = tk.StringVar()



entry_2 = tk.Text(
    window,  height=1, width=20,  bg="white",
)
entry_2.grid(row=1,column=2) 



entry_2.place(
    x=682.0,
    y=623.0,
    width=238.0,
    height=29.0
)




entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    357.0,
    236.5,
    image=entry_image_3
)

entry_3 = Entry(
    window,    bg="white", textvariable = myStrVar)
entry_3.grid(padx = 3, pady = 5, row = 0, column = 1)



entry_3.place(
    x=238.0,
    y=221.0,
    width=238.0,
    height=29.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: getTED(choose_file()),
    relief="flat"
)
button_2.place(
    x=239.0,
    y=363.0,
    width=167.0,
    height=33.0
)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))

button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: choose_file(),
    relief="flat"
)
button_3.place(
    x=238.0,
    y=146.0,
    width=127.0,
    height=33.0
)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,

    command=lambda: Start_btn(strings, my_upd(query,myVar), Combo1, Combo2, Combo3),
    relief="flat"
)
button_4.place(
    x=682.0,
    y=525.0,
    width=200.0,
    height=50.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    357.0,
    463.5,
    image=entry_image_4
)
entry_4 = Entry(
    bd=0,
    bg="#FFFFFF",
    highlightthickness=0
)
entry_4.place(
    x=238.0,
    y=448.0,
    width=238.0,
    height=29.0
)
vlist = ["TF", "IDF", "FULL"]
 
Combo1 = ttk.Combobox(window, values = vlist, state="readonly")
Combo1.set("Pick an Option")
Combo1.place(
    x=715.0,
    y=264.0,
    width=99.0,
    height=18.0
)


vlist = ["Non Indexing", "With Indexing"]
 
Combo2 = ttk.Combobox(window, values = vlist, state="readonly")
Combo2.set("Pick an Option")
Combo2.place(
    x=715.0,
    y=354.0,
    width=99.0,
    height=18.0
)

vlist = ["PCC Measure", "Cosine measure"]

Combo3 = ttk.Combobox(window, values = vlist, state="readonly")
Combo3.set("Pick an Option")
Combo3.place(
    x=715.0,
    y=444.0,
    width=99.0,
    height=18.0
)

Combo1.config(font='Aerial 7',justify='center'  )
Combo2.config(font='Aerial 7',justify='center'  )
Combo3.config(font='Aerial 7',justify='center'  )

# query=my_upd()
# password=choose_file()
# print(entry_1.insert(0,str(query)))
# print(entry_3.insert(0,str(password)))
window.resizable(False, False)
window.mainloop()
